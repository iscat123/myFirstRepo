本地仓库初始化：git init
设置项目级签名：git config user.name [名称] \
				git config user.email [邮箱] \
				签名信息存放位置：.git/config文件
设置系统及签名：git config --global user.name [名称] \
				git config --global user.email [邮箱] \
				签名信息存放位置：~/.gitconfig文件
				
查看工作区和暂存区的状态：git status
文件从工作区添加到暂存区：git add [文件名]
文件从暂存区提交的本地库：git commit -m [提交信息] [文件名]

查看日志：git log
简洁显示日志：git log --pretty=oneline
简洁显示日志：git log --oneline
显示到当前版本的步数：git reflog 

版本前后移动：git reset --hard [局部索引值] 例：git reset --hard 04ec0ae \
			  git reset --hard HEAD^^ 注：只能回退版本，^数量就是回退版本的数量 \
			  git reset --hard HEAD~2 注：只能回退版本，~后的数值就是回退版本的数量

删除文件找回：前提：删除时，文件存在时的状态已经提交到了本地库 \
			  操作：通过版本移动找回

文件比较：git diff 注：不加文件名时比较多个文件 \
		  git diff [文件名] 注：将工作区和暂存区的某个文件进行比较 \
		  git diff [本地库中的历史版本] [文件名] 注：将工作区和本地库的某个版本中的某个文件进行比较
		  
分支操作：创建分支：git branch [分支名]
		  查看分支：git branch -v
		  切换分支：git checkout [分支]
		  删除分支：git branch -d [分支名] 注：强制删除用-D \
					git push [远端地址别名] --delete [远端分支名]
		  合并分支：1.git checkout [需要被合并的分支] \
					2.git merge [新修改的分支]
		  解决冲突：1.编辑文件删除特殊符号(<<<HEAD、====) \
					2.沟通修改文件内容 \
					3.git add [文件名] \
					4.git commit -m [提交信息] 注：千万不能加文件名
					
查看远端地址别名：git remote -v
添加远端地址别名：git remote add [别名] [远端实际地址]
删除远端别名：git remote remove [远端别名]

推送：git push [远端别名] [本地分支]
克隆：git clone [http地址]
拉取：git pull [远端别名] [远端分支] \
	  pull = fetch + merge \
	  git fetch [远端别名] [远端分支] \
	  git merge [远端别名/远端分支] \
	  解决冲突：参考分支操作中的解决冲突，最后推送即可

跨团队协作：gitHub上进行fork,复制到远端仓库，然后clone到本地，修改提交到远端，pull request

SSH登入：1.进入当前用户的家目录 cd ~ \
		 2.删除.ssh目录 rm -rvf .ssh \
		 3.运行命令生成.ssh密钥目录  ssh-keygen -t rsa -C [gitHub的登入邮箱]
		 4.进入.ssh目录查看文件列表 cd .ssh \
		 5.查看id_rsa.pub文件内容 cat id_rsa.pub \
		 6.复制id_rsa.pub文件内容，登入GitHub,点击用户头像-->Settings-->SSH and GPG keys-->New SSH key \
		 7.输入复制的密钥信息 \
		 8.回到Git bash 创建远程地址别名 git remote add [远程地址别名] [远程git地址]

忽略文件gitignore：当前git管理目录创建.gitignore文件，文件中添加忽略管理的文件

创建个人访问令牌：https://zhuanlan.zhihu.com/p/501872439
https://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@github.com/iscat123/myFirstRepo.git